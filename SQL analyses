1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = 10000
vi. Checkin = 493
vii. Photo = 10000
viii. Tip = 537
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	
	SQL code used to arrive at answer:
	
	SELECT *

FROM user

WHERE
      id IS NULL OR
      name IS NULL OR
      review_count IS NULL OR
      yelping_since IS NULL OR
      useful IS NULL OR
      funny IS NULL OR
      cool IS NULL OR
      fans IS NULL OR
      average_stars IS NULL OR
      compliment_hot IS NULL OR
      compliment_more IS NULL OR
      compliment_profile IS NULL OR
      compliment_cute IS NULL OR
      compliment_list IS NULL OR
      compliment_note IS NULL OR
      compliment_plain IS NULL OR
      compliment_cool IS NULL OR
      compliment_funny IS NULL OR
      compliment_writer IS NULL OR
      compliment_photos IS NULL
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 	1	max: 	5	avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:	1	max: 5		avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:	0	max:	2	avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:	1	max:	53	avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:	0	max:	2000	avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	
	select
city
, count(review_count) as total_review
from business
group by city
order by total_review desc;

	Copy and Paste the Result Below:
	
	
+-----------------+--------------+
| city            | total_review |
+-----------------+--------------+
| Las Vegas       |         1561 |
| Phoenix         |         1001 |
| Toronto         |          985 |
| Scottsdale      |          497 |
| Charlotte       |          468 |
| Pittsburgh      |          353 |
| MontrÃ©al        |          337 |
| Mesa            |          304 |
| Henderson       |          274 |
| Tempe           |          261 |
| Edinburgh       |          239 |
| Chandler        |          232 |
| Cleveland       |          189 |
| Gilbert         |          188 |
| Glendale        |          188 |
| Madison         |          176 |
| Mississauga     |          150 |
| Stuttgart       |          141 |
| Peoria          |          105 |
| Markham         |           80 |
| Champaign       |           71 |
| North Las Vegas |           70 |
| North York      |           64 |
| Surprise        |           60 |
| Richmond Hill   |           54 |
+-----------------+--------------+
(Output limit exceeded, 25 of 362 total rows shown)
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

select
name
, stars
, review_count
from business
where city = 'Avon';

Copy and Paste the Resulting Table Below (2 columns Ã¢â‚¬â€œ star rating and count):

StarRating	Count
0	          0
1	          0
1.5	          1
2	          0
2.5	          2
3	          1
3.5	          2
4	          2
4.5	          1
5	          1	

ii. Beachwood

SQL code used to arrive at answer:

select
name
, stars
, review_count
from business
where city = 'Beachwood';

Copy and Paste the Resulting Table Below (2 columns Ã¢â‚¬â€œ star rating and count):
	
+---------------------------------+-------+--------------+
| name                            | stars | review_count |
+---------------------------------+-------+--------------+
| Maltz Museum of Jewish Heritage |   3.0 |            8 |
| Charley's Grilled Subs          |   3.0 |            3 |
| Sixth & Pine                    |   4.5 |           14 |
| Beechmont Country Club          |   5.0 |            6 |
| Hyde Park Prime Steakhouse      |   4.0 |           69 |
| Origins                         |   4.5 |            3 |
| Fyodor Bridal Atelier           |   5.0 |            4 |
| College Planning Network        |   2.0 |            8 |
| Lucky Brand Jeans               |   3.5 |            3 |
| American Eagle Outfitters       |   3.5 |            3 |
| Shaker Women's Wellness         |   5.0 |            6 |
| Avis Rent A Car                 |   2.5 |            3 |
| Cleveland Acupuncture           |   5.0 |            3 |
| Studio Mz                       |   5.0 |            4 |
+---------------------------------+-------+--------------+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
	select
		name
		, id
		, review_count
	from user
	order by review_count desc;
	limit 3
	
	Copy and Paste the Result Below:
+------------------------+--------+--------------+
| id                     | name   | review_count |
+------------------------+--------+--------------+
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald |         2000 |
| -3s52C4zL_DHRK0ULG6qtg | Sara   |         1629 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri   |         1339 |
+------------------------+--------+--------------+	


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	
Posing more reviews does not correlate with more fans. Gerald has posed the most reviews, but he does not have the most amount of fans overall.
	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: Yes

	
	SQL code used to arrive at answer:

	select
count (*)
from review
where text like '%love%';

+-----------+
| count (*) |
+-----------+
|      1780 |
+-----------+

select
count (*)
from review
where text like '%hate%';

+-----------+
| count (*) |
+-----------+
|       232 |
+-----------+
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:

SELECT
	user.id,
	name,
	fans

FROM user

ORDER BY fans DESC
LIMIT 10

	
	Copy and Paste the Result Below:

+------------------------+-----------+------+
| id                     | name      | fans |
+------------------------+-----------+------+
| -9I98YbNQnLdAmcYfb324Q | Amy       |  503 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |  497 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |  311 |
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |  253 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |  173 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |  159 |
| -9bbDysuiWeo2VShFJJtcw | Cat       |  133 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |  126 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |  124 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |  120 |
+------------------------+-----------+------+
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?

City: Mesa        Category: Food
Yes

ii. Do the two groups you chose to analyze have a different number of reviews?
Yes
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.

From the findings, it appears that there is a relationship between a business's location and their rating. Businesses located in the same neighborhood tend to have similar ratings, as well as similar operating hours. 

SQL code used for analysis:

	select
	business.name
	, business.city
	, category.category
	, business.stars
	, hours.hours
	, business.review_count
	, business.postal_code
	from (business inner join category on business.id = category.business_id) inner join hours on hours.business_id = category.business_id
	where business.city = 'Mesa' 
	group by business.stars;

		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
         The business that are open have higher rating.
         
ii. Difference 2:
         
         The business that are open have more reviews.
         
SQL code used for analysis:

select
business.name
, business.is_open
, category.category
, business.stars
, hours.hours
, business.review_count
, business.postal_code
from (business inner join category on business.id = category.business_id) inner join hours on hours.business_id = category.business_id
where business.city = 'Mesa' 
 group by business.is_open;
	
	
3.
i. Indicate the type of analysis you chose to do:
         predicting the most successful businesses based on category
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
        I will need a table incorporating key inputs with the category of the business. To conduct this analysis, I require data from the business table including id, stars, and review count, as well as category data from the category table. We will need to determine the number of companies within each category, the average star rating given by consumers to assess performance, and the total number of reviews to ensure that the data is relevant and unbiased.                   
                  
iii. Output of your finished dataset:
+------------------------+---------------+-----------+---------------+
| category               | num_companies | avg_stars | total_reviews |
+------------------------+---------------+-----------+---------------+
| Local Services         |            12 |      4.21 |           100 |
| Active Life            |            10 |      4.15 |           131 |
| Health & Medical       |            17 |      4.09 |           203 |
| Home Services          |            16 |       4.0 |            94 |
| Shopping               |            30 |      3.98 |           977 |
| Beauty & Spas          |            13 |      3.88 |           119 |
| American (Traditional) |            11 |      3.82 |          1128 |
| Food                   |            23 |      3.78 |          1781 |
| Bars                   |            17 |       3.5 |          1322 |
+------------------------+---------------+-----------+---------------+
         
iv. Provide the SQL code you used to create your final dataset:

SELECT  category, 
        count(distinct id) AS num_companies, 
        round(avg(stars),2) AS avg_stars,
        sum(review_count) total_reviews
FROM business
JOIN category ON business.id = category.business_id
GROUP BY category
ORDER BY avg_stars DESC
